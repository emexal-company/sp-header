{"version":3,"file":"header.component.js","sourceRoot":"","sources":["../src/header.component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AAEtD,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AAEzC,OAAO,WAAW,MAAM,iBAAiB,CAAC;AAC1C,OAAO,EAAE,cAAc,EAAE,cAAc,EAAE,gBAAgB,EAAE,oBAAoB,EAAE,MAAM,mBAAmB,CAAC;AAG3G,IAAa,MAAM,GAAnB,MAAa,MAAO,SAAQ,IAAI;IAAhC;;QAGsC,aAAQ,GAAY,KAAK,CAAC;QAC1B,YAAO,GAAY,KAAK,CAAC;QACzB,WAAM,GAAY,KAAK,CAAC;QACxB,WAAM,GAAY,KAAK,CAAC;IAmB9D,CAAC;IAjBW,MAAM;QACd,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,OAAO,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACpC;aACI,IAAI,IAAI,CAAC,OAAO,EAAE;YACrB,OAAO,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxC;aACI,IAAI,IAAI,CAAC,MAAM,EAAE;YACpB,OAAO,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClC;aACI,IAAI,IAAI,CAAC,MAAM,EAAE;YACpB,OAAO,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAClC;aACI;YACH,OAAO,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACpC;IACH,CAAC;CACF,CAAA;AAxBe,sBAAe,GAAG,CAAE,WAAW,CAAE,CAAC;AAEnB;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;wCAAkC;AACjC;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;uCAAiC;AAChC;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;sCAAgC;AAC/B;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;sCAAgC;AANjD,MAAM;IADlB,aAAa,CAAC,WAAW,CAAC;GACd,MAAM,CAyBlB;SAzBY,MAAM","sourcesContent":["import { customElement, property } from 'lit-element';\r\n\r\nimport { Base } from '@spectrum/sp-base';\r\n\r\nimport labelStyles from './header.styles';\r\nimport { tabletTemplate, mobileTemplate, standardTemplate, smalldesktopTemplate } from './header.template';\r\n\r\n@customElement('sp-header')\r\nexport class Header extends Base {\r\n  public static componentStyles = [ labelStyles ];\r\n\r\n  @property({ type: Boolean }) public standard: boolean = false;\r\n  @property({ type: Boolean }) public desktop: boolean = false;\r\n  @property({ type: Boolean }) public tablet: boolean = false;\r\n  @property({ type: Boolean }) public mobile: boolean = false;\r\n\r\n  protected render() {\r\n    if (this.standard) {\r\n      return standardTemplate.call(this);\r\n    }\r\n    else if (this.desktop) {\r\n      return smalldesktopTemplate.call(this);\r\n    }\r\n    else if (this.tablet) {\r\n      return tabletTemplate.call(this);\r\n    }\r\n    else if (this.mobile) {\r\n      return mobileTemplate.call(this);\r\n    }\r\n    else {\r\n      return standardTemplate.call(this);\r\n    }\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'sp-header': Header;\r\n  }\r\n}\r\n"]}